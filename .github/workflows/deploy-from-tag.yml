name: deploy-from-tag
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "The tag to deploy"
        required: true
      environment:
        type: choice
        options:
            - sandbox
            - sandbox2
        description: "The environment to deploy to"
        default: sandbox
        required: true
env:
  ELDERMARK_REPO: "LivTechCos/eldermark"
  ELDERMARK_VUE_REPO: "LivTechCos/eldermark-vue"

permissions:
  id-token: write

jobs:
    get-tag-sha:
        runs-on: ubuntu-latest
        concurrency:
            group: ${{ github.workflow }}-get-tag-sha
        steps:
            - name: Get Tag SHA - eldermark
              id: eldermark-get-tag-sha
              run: |
                  SHA=$(curl -L -X GET \
                  -H "Accept: application/vnd.github+json" \
                  -H "Authorization: Bearer ${{ secrets.REPO_TOKEN }}" \
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  https://api.github.com/repos/${{ env.ELDERMARK_REPO }}/git/ref/tags/${{ github.event.inputs.tag }} \
                  | jq -r '.object.sha')

                  echo "SHA=$SHA" >> $GITHUB_OUTPUT

            - name: Get Tag SHA - eldermark-vue
              id: eldermark-vue-get-tag-sha
              run: |
                  SHA=$(curl -L -X GET \
                  -H "Accept: application/vnd.github+json" \
                  -H "Authorization: Bearer ${{ secrets.REPO_TOKEN }}" \
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  https://api.github.com/repos/${{ env.ELDERMARK_VUE_REPO }}/git/ref/tags/${{ github.event.inputs.tag }} \
                  | jq -r '.object.sha')

                  echo "SHA=$SHA" >> $GITHUB_OUTPUT
            - name: print output
              run: |
                  echo "eldermark" ${{ steps.eldermark-get-tag-sha.outputs.SHA }}
                  echo "eldermark-vue" ${{ steps.eldermark-vue-get-tag-sha.outputs.SHA }}
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                role-to-assume: ${{ secrets.AWS_ROLE }}
                aws-region: ${{ secrets.AWS_REGION }}
            - name: Deploy to AWS
              run: |
                echo "Triggering CodePipeline for Eldermark"
                aws codepipeline start-pipeline-execution --name Deploy-Clinical-Sandbox --source-revisions actionName=Source,revisionType=COMMIT_ID,revisionValue=${{ steps.eldermark-get-tag-sha.outputs.SHA }} actionName=vue,revisionType=COMMIT_ID,revisionValue=${{ steps.eldermark-vue-get-tag-sha.outputs.SHA }} --region us-east-2                
