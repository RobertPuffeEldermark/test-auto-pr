name: Trigger Create Release

on: 
  workflow_dispatch:
    inputs:
        target_workflow:
            description: 'The name of the workflow to trigger'
            required: true
            default: 'tag-create-release'
        ReleaseName:
            description: 'Name of release. ex. Sprint 6 Close'
            type: string
            required: true
        DeploymentInstructions:
            description: 'Deployment Instructions'
            required: false
            type: string
            default: 'Include tickets if possible [https://eldermark.atlassian.net/browse/EMAR-582](https://eldermark.atlassian.net/browse/EMAR-582)'
        IncludePipelineMicroservices:
            description: 'Include default list of clinical microservices'
            type: string
            default: '          ### Microservices deployed:\n            \n          **Clinical Pipeline**\n          \n          - api-gateway\n          - assessment\n          - audit\n          - billing\n          - crm\n          - emar-sync\n          - eureka\n          - event\n          - housing\n          - mirth-service\n          - notification\n          - org\n          - resident\n          - rm\n          - web\n          \n          **EMAR Pipeline**\n          \n          - emar-cluster\n          - emar-data-api\n'

jobs:
    # ToDo: use github api to get tags from each repository and calculate new tag. 
    # ToDo: Add concurrency
    trigger-create-release:
        runs-on: ubuntu-latest
        steps:
        # Trigger Repository 1
        - name: Trigger Target Workflow - Powershell
          run: |          
            curl -L -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.REPO_TOKEN_RP }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/RobertPuffeEldermark/PowerShell/actions/workflows/${{ github.event.inputs.target_workflow }}/dispatches \
            -d '{"ref":"main","inputs":{"DeploymentInstructions":"${{ github.event.inputs.DeploymentInstructions }}"}}'
        # Repeat the above step for each repository

    # ToDo: validate tag was created in all repositories
